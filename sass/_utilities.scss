// stylelint-disable indentation

$utilities: map-get-multiple($utilities, (
  "align",
  "float",
  "opacity",
  "overflow",
  "display",
  "shadow",
  "position",
  "top",
  "bottom",
  "start",
  "end",
  "translate-middle",
  "border",
  "border-top",
  "border-end",
  "border-bottom",
  "border-start",
  "border-color",
  "border-width",
  "width",
  "max-width",
  "viewport-width",
  "min-viewport-width",
  "height",
  "max-height",
  "viewport-height",
  "min-viewport-height",
  "flex",
  "flex-direction",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "gap",
  "justify-content",
  "align-items",
  "align-content",
  "align-self",
  "order",
  "margin",
  "margin-x",
  "margin-y",
  "margin-top",
  "margin-end",
  "margin-bottom",
  "margin-start",
  "negative-margin",
  "negative-margin-x",
  "negative-margin-y",
  "negative-margin-top",
  "negative-margin-end",
  "negative-margin-bottom",
  "negative-margin-start",
  "padding",
  "padding-x",
  "padding-y",
  "padding-top",
  "padding-end",
  "padding-bottom",
  "padding-start",
  "font-family",
  "font-size",
  "font-style",
  "font-weight",
  "line-height",
  "text-align",
  "text-decoration",
  "text-transform",
  "white-space",
  "word-wrap",
  "color",
  "text-opacity",
  "background-color",
  "bg-opacity",
  "gradient",
  "user-select",
  "pointer-events",
  "rounded",
  "rounded-top",
  "rounded-end",
  "rounded-bottom",
  "rounded-start",
  "visibility"
));

$utilities: map-merge($utilities, (
    "align": null,
    "float": (
      responsive: true,
      property: float,
      values: (
        left: left,
        right: right,
        none: none
      )
    ),
    "opacity": (
      property: opacity,
      class: op,
      values: (
        0: 0,
        25: .25,
        50: .5,
        75: .75,
        100: 1
      )
    ),
    "overflow": (
      property: overflow,
      values: (
        auto: auto,
        hidden: hidden,
        visible: visible,
        scroll: scroll,
      )
    ),
    "display": (
      responsive: true,
      print: true,
      property: display,
      class: d,
      values: (
        inline: inline,
        inline-block: inline-block,
        block: block,
        grid: grid,
        table: table,
        table-row: table-row,
        table-cell: table-cell,
        flex: flex,
        inline-flex: inline-flex,
        none: none
      )
    ),
    "shadow": (
      property: box-shadow,
      class: shadow,
      values: (
        null: $box-shadow,
        sm: $box-shadow-sm,
        lg: $box-shadow-lg,
        none: none
      )
    ),
    "position": (
      property: position,
      values: (
        static: static,
        relative: relative,
        absolute: absolute,
        fixed: fixed,
        sticky: sticky
      )
    ),
    "top": null,
    "bottom": null,
    "start": null,
    "end": null,
    "translate-middle": null,
    "border": (
      property: border,
      class: bd,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-top": (
      property: border-top,
      class: bd-top,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-end": (
      property: border-right,
      class: bd-right,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-bottom": (
      property: border-bottom,
      class: bd-bottom,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-start": (
      property: border-left,
      class: bd-left,
      values: (
        null: $border-width solid $border-color,
        0: 0
      )
    ),
    "border-color": (
      property: border-color,
      class: bd,
      values: (
        transparent: transparent,
        white: $white,
        black: $black
      )
    ),
    "border-width": (
      property: border-width,
      class: bd,
      values: $border-widths
    ),
    "width": (
      property: width,
      class: w,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-width": (
      property: max-width,
      class: mw,
      values: (
        100: 100%
      )
    ),
    "viewport-width": (
      property: width,
      class: vw,
      values: (
        100: 100vw
      )
    ),
    "min-viewport-width": null,
    "height": (
      property: height,
      class: h,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-height": (
      property: max-height,
      class: mh,
      values: (
        100: 100%
      )
    ),
    "viewport-height": (
      property: height,
      class: vh,
      values: (
        100: 100vh
      )
    ),
    "min-viewport-height": null,
    "flex": (
      responsive: true,
      property: flex,
      values: (
        fill: 1 1 auto
      )
    ),
    "flex-direction": (
      responsive: true,
      property: flex-direction,
      class: flex,
      values: (
        row: row,
        col: column,
        row-reverse: row-reverse,
        col-reverse: column-reverse
      )
    ),
    "flex-grow": (
      responsive: true,
      property: flex-grow,
      class: flex,
      values: (
        grow-0: 0,
        grow-1: 1,
      )
    ),
    "flex-shrink": (
      responsive: true,
      property: flex-shrink,
      class: flex,
      values: (
        shrink-0: 0,
        shrink-1: 1,
      )
    ),
    "flex-wrap": null,
    "gap": (
      responsive: true,
      property: gap,
      class: gap,
      values: $spacers
    ),
    "justify-content": (
      responsive: true,
      property: jc,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        even: space-evenly,
      )
    ),
    "align-items": (
      responsive: true,
      property: ai,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )
    ),
    "align-content": (
      responsive: true,
      property: ac,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch,
      )
    ),
    "align-self": (
      responsive: true,
      property: as,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch
      )
    ),
    "order": (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6
      )
    ),
    "margin": (
      responsive: true,
      property: margin,
      class: m,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-end": (
      responsive: true,
      property: margin-right,
      class: mr,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-start": (
      responsive: true,
      property: margin-left,
      class: ml,
      values: map-merge($spacers, (auto: auto))
    ),
    // Negative margin utilities
    "negative-margin": null,
    "negative-margin-x": null,
    "negative-margin-y": null,
    "negative-margin-top": null,
    "negative-margin-end": null,
    "negative-margin-bottom": null,
    "negative-margin-start": null,
    "padding": (
      responsive: true,
      property: padding,
      class: p,
      values: $spacers
    ),
    "padding-x": (
      responsive: true,
      property: padding-right padding-left,
      class: px,
      values: $spacers
    ),
    "padding-y": (
      responsive: true,
      property: padding-top padding-bottom,
      class: py,
      values: $spacers
    ),
    "padding-top": (
      responsive: true,
      property: padding-top,
      class: pt,
      values: $spacers
    ),
    "padding-end": (
      responsive: true,
      property: padding-right,
      class: pr,
      values: $spacers
    ),
    "padding-bottom": (
      responsive: true,
      property: padding-bottom,
      class: pb,
      values: $spacers
    ),
    "padding-start": (
      responsive: true,
      property: padding-left,
      class: pl,
      values: $spacers
    ),
    "font-family": (
      property: font-family,
      class: ff,
      values: (
        monospace: var(--#{$variable-prefix}font-monospace)
      )
    ),
    "font-size": (
      rfs: true,
      property: font-size,
      class: fs,
      values: $font-sizes
    ),
    "font-style": (
      property: font-style,
      class: text,
      values: (
        normal: normal,
        italic: italic
      )
    ),
    "font-weight": (
      property: font-weight,
      class: fw,
      values: (
        light: $font-weight-light,
        lighter: $font-weight-lighter,
        normal: $font-weight-normal,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder
      )
    ),
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        1: 1,
        2: $line-height-sm,
        3: $line-height-base,
        4: $line-height-lg,
        5: $line-height-xl
      )
    ),
    "text-align": (
      responsive: true,
      property: text-align,
      class: text,
      values: (
        left: left,
        right: right,
        center: center,
        justify: justify
      )
    ),
    "text-decoration": (
      property: text-decoration,
      class: text,
      values: (
        none: none,
        strike: line-through,
        lined: underline
      )
    ),
    "text-transform": (
      property: text-transform,
      class: text,
      values: (
        lowercase: lowercase,
        uppercase: uppercase,
        capitalize: capitalize
      )
    ),
    "white-space": (
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap
      )
    ),
    "word-wrap": (
      property: word-wrap word-break,
      class: text,
      rtl: false,
      values: (
        break: break-word
      )
    ),
    "color": (
      property: color,
      class: fc,
      local-vars: (
        "text-opacity": 1
      ),
      values: map-merge(
        $utilities-text-colors,
        (
          "muted": $text-muted,
          "reset": inherit,
        )
      )
    ),
    "text-opacity": null,
    "background-color": (
      property: background-color,
      class: bg,
      local-vars: (
        "bg-opacity": 1
      ),
      values: $background-colors
    ),
    "bg-opacity": null,
    "gradient": null,
    "user-select": null,
    "pointer-events": (
      property: pointer-events,
      class: pe,
      values: (
        none: none,
        auto: auto
      ),
    ),
    "rounded": (
      property: border-radius,
      class: radius,
      values: (
        null: $border-radius,
        0: 0,
        1: $border-radius-sm,
        2: $border-radius,
        3: $border-radius-lg,
        circle: 50%,
        pill: $border-radius-pill
      )
    ),
    "rounded-top": (
      property: border-top-left-radius border-top-right-radius,
      class: radius-top,
      values: (
        null: $border-radius
      )
    ),
    "rounded-end": (
      property: border-top-right-radius border-bottom-right-radius,
      class: radius-right,
      values: (
        null: $border-radius
      )
    ),
    "rounded-bottom": (
      property: border-bottom-right-radius border-bottom-left-radius,
      class: radius-bottom,
      values: (
        null: $border-radius
      )
    ),
    "rounded-start": (
      property: border-bottom-left-radius border-top-left-radius,
      class: radius-left,
      values: (
        null: $border-radius
      )
    ),
    "visibility": (
      property: visibility,
      class: null,
      values: (
        visible: visible,
        invisible: hidden,
      )
    )
  )
);

@import "~bootstrap/scss/utilities/api";

