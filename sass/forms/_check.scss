//
// Check/radio
//

.fm-check {
  display: block;
  min-height: $form-check-min-height;
  padding-left: $form-check-padding-start;
  margin-bottom: $form-check-margin-bottom;

  &.reverse {
    padding-right: $form-check-padding-start;
    padding-left: 0;
    text-align: right;

    .fm-check-input {
      float: right;
      margin-right: $form-check-padding-start * -1;
      margin-left: 0;
    }
  }

  &-input {
    float: left;
    margin-left: $form-check-padding-start * -1;
  }

  &.fm-lg {
     padding-left: $form-check-padding-start + .5;

  }


  &.fm-lg &-input {
    width: $form-check-input-width  + .4;
    height: $form-check-input-width + .4;
    float: left;
    margin-left: ($form-check-padding-start + .5) * -1;
  }

  &.fm-lg &-label {
    line-height: ($form-check-input-width * 2) - .1;
  }
}

.fm-check-input {
  width: $form-check-input-width;
  height: $form-check-input-width;
  margin-top: ($line-height-base - $form-check-input-width) * .5; // line-height minus check height
  vertical-align: top;
  background-color: $form-check-input-bg;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: $form-check-input-border;
  appearance: none;
  print-color-adjust: exact; // Keep themed appearance for print
  @include transition($form-check-transition);

  &[type="checkbox"] {
    @include border-radius($form-check-input-border-radius);
  }

  &[type="radio"] {
    // stylelint-disable-next-line property-disallowed-list
    border-radius: $form-check-radio-border-radius;
  }

  &:active {
    filter: $form-check-input-active-filter;
  }

  &:focus {
    border-color: $form-check-input-focus-border;
    outline: 0;
    box-shadow: $form-check-input-focus-box-shadow;
  }

  &:checked {
    background-color: $form-check-input-checked-bg-color;
    border-color: $form-check-input-checked-border-color;

    &[type="checkbox"] {
      background-image: escape-svg(icon-cross($form-check-input-checked-color));
    }

    &[type="radio"] {
      background-image: escape-svg(icon-square($form-check-input-checked-color));
    }
  }

  &[type="checkbox"]:indeterminate {
    background-color: $form-check-input-indeterminate-bg-color;
    border-color: $form-check-input-indeterminate-border-color;
    background-image: escape-svg(icon-minus($form-check-input-indeterminate-bg-image));
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: $form-check-input-disabled-opacity;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .fm-check-label {
      cursor: default;
      opacity: $form-check-label-disabled-opacity;
    }
  }
}

.fm-check-label {
  color: $form-check-label-color;
  cursor: $form-check-label-cursor;
}



