{
  "data": [
    {
      "title": "Form Dropdown",
      "describe": "The from dropdown <code>.fm-dropdown</code> class is for usage within forms designed to work together with the Stimulus <code>Dropdown</code> controller. The structure leverages <code>type=\"radio\"</code> and <code>label</code> inputs to infer a selection. In addition, you can annotate the <code>label</code> with a <code>aria-label</code> which will render a badge to the right side.",
      "classes": {
        "states": [
          {
            "title": "Dropdown Collapse",
            "class": ".fm-dropdown"
          },
          {
            "title": "Dropdown Disabled",
            "class": ".fm-dropdown .disabled"
          },
          {
            "title": "Dropdown Selected",
            "class": ".fm-dropdown .selected"
          },
          {
            "title": "Dropdown Valid",
            "class": ".fm-dropdown .is-valid"
          },
          {
            "title": "Dropdown Invalid",
            "class": ".fm-dropdown .is-invalid"
          }
        ],
        "expanded": [
          {
            "title": "Dropdown Select",
            "class": ".fm-dropdown .opened",
            "type": "Collapsed"
          }
        ]
      }
    },
    {
      "title": "Form Input",
      "describe": "Form input fields account for any element using the <code>input</code> tag. The classes are mostly inherited from Bootstrap with refined naming conventions and SVG validation icon changes.",
      "classes": {
        "inputs": [
          {
            "title": "Input (base)",
            "class": ".fm-input"
          },
          {
            "title": "Valid",
            "class": ".fm-input .is-valid"
          },
          {
            "title": "Invalid",
            "class": ".fm-input .is-invalid"
          }
        ],
        "states": [
          {
            "title": "Readonly",
            "class": "readonly"
          },
          {
            "title": "Disabled",
            "class": "disabled"
          },
          {
            "title": "Disabled + Readonly",
            "class": "disabled readonly"
          }
        ],
        "sizes": [
          {
            "title": "Input Small",
            "class": ".fm-input .fm-sm"
          },
          {
            "title": "Input Large",
            "class": ".fm-input .fm-lg"
          }
        ]
      }
    },
    {
      "title": "Form Lined",
      "describe": "Annotating form classes with <code>fm-lined</code> will result in a bottom line based style to form inputs, selects and dropdowns. This lined style is used as an UI aesthetic in the Brixtol Textiles webshop.",
      "classes": {
        "inputs": [
          {
            "title": "Input Lined",
            "class": ".fm-input .fm-lined"
          },
          {
            "title": "Valid",
            "class": ".fm-input .fm-lined .is-valid"
          },
          {
            "title": "Invalid",
            "class": ".fm-input .fm-lined .is-invalid"
          }
        ],
        "selects": [
          {
            "title": "Select Lined",
            "class": ".fm-select .fm-lined"
          },
          {
            "title": "Valid",
            "class": ".fm-select .fm-lined .is-valid"
          },
          {
            "title": "Invalid",
            "class": ".fm-select .fm-lined .is-invalid"
          }
        ],
        "dropdowns": [
          {
            "title": "Dropdown Lined",
            "class": ".fm-dropdown .fm-lined"
          },
          {
            "title": "Valid",
            "class": ".fm-dropdown .fm-lined .is-valid"
          },
          {
            "title": "Invalid",
            "class": ".fm-dropdown .fm-lined .is-invalid"
          }
        ],
        "groups": {
          "buttons": [
            {
              "title": "Button Left",
              "input": ".fm-input"
            },
            {
              "title": "Button Right",
              "input": ".fm-input"
            },
            {
              "title": "Button (disabled)",
              "button": "disabled",
              "input": ".fm-input"
            },
            {
              "title": "Valid",
              "input": ".fm-input .is-valid"
            },
            {
              "title": "Invalid",
              "input": ".fm-input .is-invalid"
            }
          ]
        }
      }
    },
    {
      "title": "Form Group",
      "classes": {
        "inputs": [
          {
            "title": "Input (default)",
            "class": ".fm-group"
          },
          {
            "title": "Input Large",
            "class": ".fm-float .fm-lg"
          }
        ],
        "buttons": [
          {
            "title": "Input (default)",
            "class": ".fm-group"
          },
          {
            "title": "Input Large",
            "class": ".fm-float .fm-lg"
          }
        ]
      }
    },
    {
      "title": "Form Checkbox",
      "describe": "Checkbox (checkmarks) are similar to Bootstraps official logic. The fields require an <code>id</code> and <code>for</code> attributes to relate the <code>input</code> and <code>label</code> as they are identified as siblings. The items use the short-name <code>fm-</code> and need to nested in a <code>.fm-check</code> node.",
      "classes": {
        "inputs": [
          {
            "title": "Default",
            "wrap": ".fm-check",
            "class": ".fm-check-input"
          },
          {
            "title": "Valid",
            "wrap": ".fm-check",
            "class": ".fm-check-input .is-valid"
          },
          {
            "title": "Invalid",
            "wrap": ".fm-check",
            "class": ".fm-check-input .is-invalid"
          }
        ],
        "states": [
          {
            "title": "Checked",
            "wrap": ".fm-check",
            "class": "checked"
          },
          {
            "title": "Checked + Disabled",
            "wrap": ".fm-check",
            "class": "checked disabled"
          },
          {
            "title": "Disabled",
            "wrap": ".fm-check",
            "class": "disabled"
          }
        ],
        "sizes": [
          {
            "title": "Large",
            "wrap": ".fm-check .fm-lg",
            "class": ".fm-check-input"
          },
          {
            "title": "Large Checked",
            "wrap": ".fm-check .fm-lg",
            "class": ".fm-check-input"
          }
        ],
        "layouts": [
          {
            "title": "Reverse Label",
            "wrap": ".fm-check reverse",
            "class": ".fm-check-input"
          }
        ]
      }
    },
    {
      "title": "Form Range",
      "describe": "Form range inputs are almost identical to the logic found within Bootstrap. The differences are subtle but do exist. In most cases range sliders can be omitted to produce more leaner distributed stylesheets.",
      "classes": {
        "inputs": [
          {
            "title": "Input (base)",
            "class": ".fm-range"
          },
          {
            "title": "Valid",
            "class": ".fm-range .is-valid"
          },
          {
            "title": "Invalid",
            "class": ".fm-range .is-invalid"
          }
        ],
        "states": [
          {
            "title": "Disabled",
            "class": "disabled"
          }
        ],
        "attributes": [
          {
            "title": "Steps",
            "class": "step=\"0.5\""
          },
          {
            "title": "Steps Min / Max",
            "class": "min=\"0\" max=\"5\""
          }
        ]
      }
    },
    {
      "title": "Form Switch",
      "describe": "The form switch toggles are similar to Bootstraps official logic but have some minor refinments applied. The switches are forced as rectangular shapes and also offer additional sizing logic.",
      "classes": {
        "inputs": [
          {
            "title": "Switch (default)",
            "class": ".fm-switch"
          },
          {
            "title": "Switch Small",
            "class": ".fm-switch .fm-sm"
          },
          {
            "title": "Switch Large",
            "class": ".fm-switch .fm-lg"
          }
        ],
        "validate": [
          {
            "title": "Switch (default)",
            "wrap": ".fm-switch",
            "class": ".fm-check-input .is-valid"
          },
          {
            "title": "Switch Small",
            "wrap": ".fm-switch",
            "class": ".fm-check-input .is-invalid"
          }
        ]
      }
    },
    {
      "title": "Form Float",
      "classes": {
        "inputs": [
          {
            "title": "Input (default)",
            "class": ".fm-float"
          },
          {
            "title": "Input Large",
            "class": ".fm-float .fm-lg"
          }
        ],
        "select": [
          {
            "title": "Select (default)",
            "class": ".fm-float"
          },
          {
            "title": "Select Large",
            "class": ".fm-float .fm-lg"
          }
        ],
        "textarea": [
          {
            "title": "Textarea (default)",
            "class": ".fm-float .fm-lg"
          },
          {
            "title": "Textarea Large",
            "class": ".fm-float .fm-lg"
          }
        ]
      }
    }
  ]
}
